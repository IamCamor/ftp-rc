version: "3.9"
services:
  nginx:
    image: nginx:1.25-alpine
    depends_on: [php, frontend]
    ports: ["80:80"]
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend:/var/www/backend
      - ./frontend/dist:/var/www/frontend
    networks: [app]

  php:
    build: ./backend
    env_file: .env
    volumes: [ "./backend:/var/www/backend" ]
    depends_on: [postgres, redis]
    networks: [app]

  queue:
    build: ./backend
    command: sh -lc "php artisan queue:work --verbose --tries=3 --timeout=90"
    env_file: .env
    volumes: [ "./backend:/var/www/backend" ]
    depends_on: [php, redis]
    networks: [app]

  scheduler:
    build: ./backend
    command: sh -lc "php artisan schedule:work"
    env_file: .env
    volumes: [ "./backend:/var/www/backend" ]
    depends_on: [php]
    networks: [app]

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: fishtrackpro
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes: [ "pgdata:/var/lib/postgresql/data" ]
    networks: [app]

  redis:
    image: redis:7-alpine
    networks: [app]

  node:
    image: node:20-alpine
    working_dir: /var/www/frontend
    volumes: [ "./frontend:/var/www/frontend" ]
    command: sh -lc "npm ci && npm run dev"
    ports: ["5173:5173"]
    networks: [app]

  frontend:
    build: ./frontend
    env_file: .env
    networks: [app]
volumes: { pgdata: {} }
networks: { app: { driver: bridge } }
