{"version":3,"mappings":"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","names":["Confirm","open","title","text","confirmText","cancelText","onConfirm","onCancel","jsx","jsxs","loadLeaflet","__vitePreload","n","MapScreen","nav","useNavigate","mapRef","useRef","pts","setPts","useState","L","setL","confirmOpen","setConfirmOpen","pendingRef","useEffect","_L","data","points","m","p","marker","html","e","el","ev","id","t","lat","lng","config","isAuthed","saveWeatherFav","pushToast"],"ignoreList":[],"sources":["../../src/components/Confirm.tsx","../../src/pages/MapScreen.tsx"],"sourcesContent":["import React from 'react';\n\ntype Props = {\n  open: boolean;\n  title?: string;\n  text?: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: ()=>void;\n  onCancel: ()=>void;\n};\nconst Confirm: React.FC<Props> = ({open, title='Подтверждение', text='Вы уверены?', confirmText='ОК', cancelText='Отмена', onConfirm, onCancel})=>{\n  if(!open) return null;\n  return (\n    <div style={{position:'fixed', inset:0, background:'rgba(0,0,0,.35)', display:'grid', placeItems:'center', zIndex:10000}}>\n      <div className=\"glass card\" style={{minWidth:320, maxWidth:520}}>\n        <div className=\"h3\" style={{marginBottom:8}}>{title}</div>\n        <div className=\"muted\" style={{marginBottom:12}}>{text}</div>\n        <div className=\"row\" style={{justifyContent:'flex-end', gap:8}}>\n          <button className=\"btn\" onClick={onCancel}>{cancelText}</button>\n          <button className=\"btn primary\" onClick={onConfirm}>{confirmText}</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Confirm;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { points, saveWeatherFav, isAuthed } from '../api';\nimport config from '../config';\nimport Confirm from '../components/Confirm';\nimport { pushToast } from '../components/Toast';\n\n// ленивый загрузчик Leaflet (ожидается utils/leafletLoader.ts, если нет — инлайним простой)\nasync function loadLeaflet() {\n  const L = await import('leaflet');\n  // css пусть уже подключён в index.html; если нет — карта всё равно работает, только без стилей\n  return L;\n}\n\ntype MapPoint = {\n  id: number|string;\n  lat: number; lng: number;\n  type?: 'place'|'catch';\n  title?: string;\n  preview?: string; // url\n};\n\nconst MapScreen: React.FC = () => {\n  const nav = useNavigate();\n  const mapRef = useRef<any>(null);\n  const [pts, setPts] = useState<MapPoint[]>([]);\n  const [L, setL] = useState<any>(null);\n\n  // confirm dialog state\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const pendingRef = useRef<{lat:number; lng:number; title?:string} | null>(null);\n\n  useEffect(()=> {\n    (async ()=>{\n      const _L = await loadLeaflet(); setL(_L);\n      const data = await points(undefined, 500).catch(()=>[]);\n      setPts(Array.isArray(data) ? data : []);\n      // init map\n      const m = _L.map('map', { center:[55.75,37.6], zoom:10 });\n      _L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{maxZoom:19}).addTo(m);\n      mapRef.current = m;\n\n      // отрисовка\n      (Array.isArray(data)? data:[]).forEach((p:any)=>{\n        const marker = _L.marker([p.lat, p.lng]).addTo(m);\n        const html = `\n          <div style=\"min-width:180px\">\n            <div style=\"font-weight:600;margin-bottom:6px\">${p.title || 'Точка'}</div>\n            ${p.preview ? `<img src=\"${p.preview}\" alt=\"\" style=\"width:100%;height:100px;object-fit:cover;border-radius:8px\" />`: ''}\n            <div style=\"margin-top:6px;display:flex;gap:8;justify-content:flex-end\">\n              <a href=\"/place/${p.id}\" data-id=\"${p.id}\" data-type=\"${p.type||'place'}\">Открыть</a>\n            </div>\n          </div>`;\n        marker.bindPopup(html);\n        marker.on('popupopen', (e:any)=>{\n          // перехватить клик по ссылке, чтобы уйти через router\n          setTimeout(()=>{\n            const el = (e as any).popup?._contentNode?.querySelector('a[data-id]');\n            if(el){\n              el.addEventListener('click', (ev:any)=>{\n                ev.preventDefault();\n                const id = el.getAttribute('data-id');\n                const t = el.getAttribute('data-type');\n                nav(t==='catch'? `/catch/${id}` : `/place/${id}`);\n              }, { once:true });\n            }\n          }, 0);\n        });\n      });\n\n      // клик по карте — предложить сохранить в погоду\n      m.on('click', (ev:any)=>{\n        const { lat, lng } = ev.latlng || {};\n        if (!lat || !lng) return;\n        pendingRef.current = { lat, lng, title: `Точка ${lat.toFixed(4)}, ${lng.toFixed(4)}` };\n        setConfirmOpen(true);\n      });\n    })();\n  }, [nav]);\n\n  function onCancel(){ setConfirmOpen(false); pendingRef.current = null; }\n  function onConfirm(){\n    setConfirmOpen(false);\n    const p = pendingRef.current; pendingRef.current = null;\n    if(!p) return;\n    if (config.auth.requireAuthForWeatherSave && !isAuthed()){\n      if (confirm('Сохранять точки могут только авторизованные.\\nПерейти к авторизации?')){\n        window.location.href = '/login';\n      }\n      return;\n    }\n    saveWeatherFav(p);\n    pushToast('Точка сохранена для страницы погоды');\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"glass card\" style={{marginBottom:8}}>\n        Нажмите по карте, чтобы предложить сохранить точку в “Погоду”. {config.auth.requireAuthForWeatherSave?'(Требуется вход)':''}\n      </div>\n      <div id=\"map\" style={{height:'70vh', width:'100%', borderRadius:16, overflow:'hidden'}} />\n      <Confirm\n        open={confirmOpen}\n        title=\"Сохранить точку?\"\n        text=\"Добавить выбранную точку на страницу погоды?\"\n        confirmText=\"Сохранить\"\n        cancelText=\"Отмена\"\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n      />\n    </div>\n  );\n};\n\nexport default MapScreen;\n"],"file":"assets/MapScreen-CP8S4w6Z.js"}